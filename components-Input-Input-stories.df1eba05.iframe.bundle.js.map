{"version":3,"file":"components-Input-Input-stories.df1eba05.iframe.bundle.js","mappings":";;AAOA;;;;AAIA;AACA;;;;AAOA;;;;AAIA;;;AAKA;AACA;;;AAGA;;;;;AAKA;;;;;;;;;;;;;AAaA;;AAuBA","sources":["webpack://ursa-react/./src/components/Input/Input.tsx"],"sourcesContent":["import React, { ChangeEventHandler, MouseEventHandler, HTMLInputTypeAttribute } from 'react';\nimport styled from 'styled-components';\n\nconst StyledInputContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledInput = styled.input<{ hasButton?: boolean }>`\n    display: inline-flex;\n    padding: 0.7rem;\n    width: 100%;\n    border: .12rem solid ${(props) => props.theme.fonts.color};\n    border-radius: ${(props) =>\n      props.hasButton\n        ? `${props.theme.borderRadius} 0 0 ${props.theme.borderRadius}`\n        : props.theme.borderRadius};\n    box-sizing: border-box;\n    \n    &:focus-visible {\n        outline: .2rem solid ${(props) => props.theme.colors.primary};\n    }\n    &:disabled {\n      background-color: #CECECE;\n      color:  ${(props) => props.theme.fonts.color};\n      cursor: default;\n    }\n`;\n\nconst StyledButton = styled.button`\n  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0)), ${(props) => props.theme.colors.primary};\n  position: absolute;\n  padding: 0.7rem;\n  border: .12rem solid ${(props) => props.theme.fonts.color};\n  border-left: none;\n  cursor: pointer;\n  color: #FFFFFF;\n  transition: background 1s;\n  border-radius: 0 ${(props) => props.theme.borderRadius} ${(props) => props.theme.borderRadius} 0;\n\n  &:focus-visible {\n    outline: 2px solid #101820;\n  }\n\n  &:disabled {\n      background-color: gray;\n      color: #FFFFFF;\n      border-color: gray;\n  }\n\n  &:hover:enabled {\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), ${(props) => props.theme.colors.primary};\n  }\n`;\n\n\nexport interface InputProps {\n  title: string;\n  alt?: string | undefined;\n  autoComplete?: string | undefined;\n  autoFocus?: boolean | undefined;\n  disabled?: boolean | undefined;\n  id?: string | undefined;\n  name?: string | undefined;\n  onChange?: ChangeEventHandler;\n  onClick?: MouseEventHandler;\n  placeholder?: string | undefined;\n  readOnly?: boolean | undefined;\n  required?: boolean | undefined;\n  type: HTMLInputTypeAttribute;\n  value?: string | ReadonlyArray<string> | number | undefined;\n  button?: string;\n}\n\nconst Input = ({\n  title,\n  alt,\n  autoComplete,\n  autoFocus,\n  disabled,\n  id,\n  name,\n  onChange,\n  onClick,\n  placeholder,\n  readOnly,\n  required,\n  type,\n  value,\n  button,\n}: InputProps) => {\n  return (\n    <StyledInputContainer>\n      <StyledInput\n        title={title}\n        alt={alt}\n        autoComplete={autoComplete}\n        autoFocus={autoFocus}\n        disabled={disabled}\n        id={id}\n        name={name}\n        onChange={onChange}\n        onClick={onClick}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        type={type}\n        value={value}\n        hasButton={!!button}\n      />\n      {button && <StyledButton>{button}</StyledButton>}\n    </StyledInputContainer>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n  disabled: false,\n};\n\nexport { Input };"],"names":[],"sourceRoot":""}