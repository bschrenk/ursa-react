{"version":3,"file":"components-Link-Link-stories.b97d4c4c.iframe.bundle.js","mappings":";AAoBA;;;AAcA;AC9BA;;AAEA;;;;;;;;;;;;;;;;;AAiBA;;AAeA","sources":["webpack://ursa-react/./src/components/Link/Link.tsx","webpack://ursa-react/./src/components/Button/Button.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../Button/Button';\n\nenum LinkType {\n    Regular = \"a\",\n    Button = \"button\",\n}\n\ninterface StyledLinkProps {\n    children: ReactNode | string;\n};\n\ninterface LinkProps {\n    type: LinkType;\n    href: string;\n    content: ReactNode | string;\n}\n\nconst StyledRegularLink: React.FC<StyledLinkProps & { href: string }> = styled.a`\n  color: ${(props) => props.theme.colors.primary};\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst determineLink = (type: LinkType, href: string, content: ReactNode | string) => {\n    switch (type) {\n        case LinkType.Regular:\n            return <StyledRegularLink href={href}>{content}</StyledRegularLink>;\n        case LinkType.Button:\n            return <StyledRegularLink href={href}><Button>{content}</Button></StyledRegularLink>;\n    }\n}\n\nconst Link = ({\n    type,\n    href,\n    content,\n}: LinkProps) => {\n    return determineLink(type, href, content);\n}\n\nLink.defaultProps = {\n};\n\nexport { Link, LinkProps, LinkType };","import React, { FormEventHandler, MouseEventHandler, ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`  \n  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0)), ${(props) => props.theme.colors.primary};\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: #FFFFFF;\n  padding: .7rem 1.5rem;\n  cursor: pointer;\n  transition: background 1s;\n\n  &:focus-visible {\n      outline: 2px solid #101820;\n  }\n\n  &:disabled {\n      background-color: gray;\n      color: #FFFFFF;\n      border-color: gray;\n  }\n\n  &:hover:enabled {\n    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport interface ButtonProps {\n    id?: string | undefined,\n    autoFocus?: boolean | undefined;\n    disabled?: boolean | undefined;\n    className?: string | undefined,\n    children: ReactNode,\n    type?: 'submit' | 'reset' | 'button' | undefined;\n    onClick?: MouseEventHandler,\n    onChange?: FormEventHandler\n}\n\nconst Button = ({\n    id,\n    autoFocus,\n    className,\n    children,\n    disabled,\n    type,\n    onClick,\n    onChange\n}: ButtonProps) => {\n    return (\n        <StyledButton\n            autoFocus={autoFocus}\n            className={className}\n            id={id}\n            type={type}\n            onChange={onChange}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {children}\n        </StyledButton>\n    );\n};\n\nButton.defaultProps = {\n};\n\nexport { Button };"],"names":[],"sourceRoot":""}