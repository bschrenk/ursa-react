"use strict";(self.webpackChunkursa_react=self.webpackChunkursa_react||[]).push([[190],{"./src/components/Toast/Toast.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllOptions:()=>AllOptions,CustomColor:()=>CustomColor,CustomDuration:()=>CustomDuration,CustomPosition:()=>CustomPosition,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Toast_stories});var react=__webpack_require__("./node_modules/react/index.js"),chunk_AY7I2SME=__webpack_require__("./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),ToastPosition=function(ToastPosition){return ToastPosition.TopLeft="top-left",ToastPosition.TopRight="top-right",ToastPosition.BottomLeft="bottom-left",ToastPosition.BottomRight="bottom-right",ToastPosition}(ToastPosition||{}),ToastColor=function(ToastColor){return ToastColor.Primary="primary",ToastColor.Secondary="secondary",ToastColor}(ToastColor||{});const ToastWrapper=styled_components_browser_esm.ZP.div`
  position: fixed;
  color: #fff;
  padding: 10px 20px;
  border-radius: 8px;
  opacity: ${props=>props.isVisible?"1":"0"};
  transition: opacity 0.3s ease-in-out;
  pointer-events: ${props=>props.isVisible?"auto":"none"};
  ${props=>(position=>{switch(position){case ToastPosition.TopLeft:return"\n        top: 20px;\n        left: 20px;\n      ";case ToastPosition.TopRight:return"\n        top: 20px;\n        right: 20px;\n      ";case ToastPosition.BottomLeft:return"\n        bottom: 20px;\n        left: 20px;\n      ";case ToastPosition.BottomRight:default:return"\n        bottom: 20px;\n        right: 20px;\n      "}})(props.position)};
  ${props=>((color,themeColors)=>{switch(color){case ToastColor.Secondary:return`\n        background-color: ${themeColors.secondary};\n      `;case ToastColor.Primary:default:return`\n        background-color: ${themeColors.primary};\n      `}})(props.color,props.theme.colors)};
`,Toast=_ref=>{let{message,duration=3e3,position=ToastPosition.BottomRight,color=ToastColor.Primary}=_ref;const[isVisible,setIsVisible]=(0,react.useState)(!0);return(0,react.useEffect)((()=>{const timer=setTimeout((()=>{setIsVisible(!1)}),duration);return()=>{clearTimeout(timer)}}),[duration]),(0,jsx_runtime.jsx)(ToastWrapper,{isVisible,position,color,children:message})};Toast.displayName="Toast";try{Toast.displayName="Toast",Toast.__docgenInfo={description:"",displayName:"Toast",props:{message:{defaultValue:null,description:"",name:"message",required:!0,type:{name:"string"}},duration:{defaultValue:{value:"3000"},description:"",name:"duration",required:!1,type:{name:"number"}},position:{defaultValue:{value:"ToastPosition.BottomRight"},description:"",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-left"'},{value:'"top-right"'},{value:'"bottom-left"'},{value:'"bottom-right"'}]}},color:{defaultValue:{value:"ToastColor.Primary"},description:"",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/Toast.tsx#Toast"]={docgenInfo:Toast.__docgenInfo,name:"Toast",path:"src/components/Toast/Toast.tsx#Toast"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/Button.tsx");const Toast_stories={title:"Example/Toast",component:Toast,parameters:{layout:"centered"},tags:["autodocs"]},Template=args=>{const[isVisible,setIsVisible]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{if(isVisible){const timer=setTimeout((()=>{setIsVisible(!1)}),args.duration||3e3);return()=>{clearTimeout(timer)}}}),[isVisible,args.duration]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.z,{onClick:()=>{setIsVisible(!0),(0,chunk_AY7I2SME.aD)("Toast triggered")(args)},children:"Trigger Toast"}),isVisible&&(0,jsx_runtime.jsx)(Toast,{...args})]})},Default=Template.bind({});Default.args={message:"This is a default toast message"};const CustomPosition=Template.bind({});CustomPosition.args={message:"Custom position - top-left",position:ToastPosition.TopLeft};const CustomColor=Template.bind({});CustomColor.args={message:"Custom color - secondary",color:ToastColor.Primary};const CustomDuration=Template.bind({});CustomDuration.args={message:"Custom duration - 5000ms",duration:5e3};const AllOptions=Template.bind({});AllOptions.args={message:"Custom position, color, and duration",position:ToastPosition.TopRight,color:ToastColor.Secondary,duration:5e3},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const triggerToast = () => {\n    setIsVisible(true);\n    action('Toast triggered')(args);\n  };\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, args.duration || 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible, args.duration]);\n  return <>\n            <Button onClick={triggerToast}>Trigger Toast</Button>\n            {isVisible && <Toast {...args} />}\n        </>;\n}",...Default.parameters?.docs?.source}}},CustomPosition.parameters={...CustomPosition.parameters,docs:{...CustomPosition.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const triggerToast = () => {\n    setIsVisible(true);\n    action('Toast triggered')(args);\n  };\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, args.duration || 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible, args.duration]);\n  return <>\n            <Button onClick={triggerToast}>Trigger Toast</Button>\n            {isVisible && <Toast {...args} />}\n        </>;\n}",...CustomPosition.parameters?.docs?.source}}},CustomColor.parameters={...CustomColor.parameters,docs:{...CustomColor.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const triggerToast = () => {\n    setIsVisible(true);\n    action('Toast triggered')(args);\n  };\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, args.duration || 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible, args.duration]);\n  return <>\n            <Button onClick={triggerToast}>Trigger Toast</Button>\n            {isVisible && <Toast {...args} />}\n        </>;\n}",...CustomColor.parameters?.docs?.source}}},CustomDuration.parameters={...CustomDuration.parameters,docs:{...CustomDuration.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const triggerToast = () => {\n    setIsVisible(true);\n    action('Toast triggered')(args);\n  };\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, args.duration || 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible, args.duration]);\n  return <>\n            <Button onClick={triggerToast}>Trigger Toast</Button>\n            {isVisible && <Toast {...args} />}\n        </>;\n}",...CustomDuration.parameters?.docs?.source}}},AllOptions.parameters={...AllOptions.parameters,docs:{...AllOptions.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const triggerToast = () => {\n    setIsVisible(true);\n    action('Toast triggered')(args);\n  };\n  useEffect(() => {\n    if (isVisible) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n      }, args.duration || 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [isVisible, args.duration]);\n  return <>\n            <Button onClick={triggerToast}>Trigger Toast</Button>\n            {isVisible && <Toast {...args} />}\n        </>;\n}",...AllOptions.parameters?.docs?.source}}};const __namedExportsOrder=["Default","CustomPosition","CustomColor","CustomDuration","AllOptions"]},"./src/components/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>Button});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledButton=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.button`  
  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0)), ${props=>props.theme.colors.primary};
  border: none;
  border-radius: ${props=>props.theme.borderRadius};
  color: #FFFFFF;
  padding: .7rem 1.5rem;
  cursor: pointer;
  transition: background 1s;

  &:focus-visible {
      outline: 2px solid #101820;
  }

  &:disabled {
      background-color: gray;
      color: #FFFFFF;
      border-color: gray;
  }

  &:hover:enabled {
    background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), ${props=>props.theme.colors.primary};
  }
`,Button=_ref=>{let{id,autoFocus,className,children,disabled,type,onClick,onChange}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledButton,{autoFocus,className,id,type,onChange,onClick,disabled,children})};Button.displayName="Button",Button.defaultProps={};try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"reset"'},{value:'"submit"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"FormEventHandler"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=components-Toast-Toast-stories.478babc5.iframe.bundle.js.map